#!/usr/bin/env node
'use strict';

const logger = require('logger'),
    argv = require('yargs')
    .usage('Usage: dump_describes [options]')

    .describe('active', 'List only active blocks (i.e., `fdescribe`, `fit`)')
    .boolean('active')

    .describe('inactive', 'List only inactive blocks (i.e., `xdescribe`, `xit`)')
    .boolean('inactive')

    .describe('html', 'Creates an html document of the tree')
    .boolean('html')

    .describe('target', 'The target suite to parse')
    .alias('target', 't')
    .nargs('target', 1)

    .describe('verbose', 'Dumps `it` blocks')
    .alias('verbose', 'v')
    .boolean('verbose')

    .help('help')
    .alias('help', 'h')
    .argv,

    // Default to logging to stdout.
    generator = require(`../src/generator/${!argv.html ? 'log' : 'html'}`),
    makeTree = require('../src/index'),
    target = argv.target,
    info = logger.info,
    error = logger.error,
    options = {
        active: argv.active,
        inactive: argv.inactive,
        verbose: argv.verbose
    };

if (!target) {
    const stdin = process.stdin;
    let buf = '';

    stdin.setEncoding('utf8');

    stdin.on('readable', () => {
        const chunk = stdin.read();

        if (chunk !== null) {
            buf += chunk;
        }
    });

    stdin.on('end', () => {
        makeTree(buf, generator, options, true)
        .then(info)
        .catch(error);
    });
} else {
    makeTree(target, generator, options, false)
    .then(info)
    .catch(error);
}

